#!/stage1/sh
export _PATH="$PATH"
export PATH="/stage1"

# Load Proprietary Modules
insmod /lib/modules/rfs_glue.ko
insmod /lib/modules/rfs_fat.ko
insmod /lib/modules/param.ko
insmod /lib/modules/h4fs.ko

set -x

cd /
date >>/boot.txt
exec >>/boot.txt 2>&1
rm /init
mount -t proc proc /proc
mount -t sysfs sysfs /sys

mount -t ext4 /dev/block/mmcblk0p15 /cache
mount -t rfs  /dev/block/mmcblk0p15 /cache

mount -t ext4 /dev/block/mmcblk0p13 /system
mount -t rfs  /dev/block/mmcblk0p13 /system

image=/stage1/boot.img

if test -e /cache/.startrecovery || grep -q bootmode=2 /proc/cmdline ; then
	# recovery boot
	rm -rf /cache/.startrecovery
	image=/stage1/recovery.img

	# disable lpm
	echo 0 > /sys/class/power_supply/battery/charging_mode_booting
elif ! busybox test -e /system/build.prop ; then
	# emergency boot
#	umount /cache
#	make_ext4fs -b 4096 -g 32768 -i 8192 -I 256 -a /cache /dev/block/mmcblk0p3
#	mount -t ext4 /dev/block/mmcblk0p15 /cache
	mkdir /cache/recovery

	mount -t vfat /dev/block/mmcblk1p1 /sdcard

	UPDATE=$(cat /sdcard/cyanogenmod.cfg)

	if test -e $UPDATE ; then
		echo "install_zip(\"`echo $UPDATE`\");" > /cache/recovery/extendedcommand
	fi

	image=/stage1/recovery.img

	# disable lpm
	echo 0 > /sys/class/power_supply/battery/charging_mode_booting
fi

umount /cache
umount /system
umount /sdcard
rm -rf /sdcard /system /cache

zcat ${image} | cpio -i

if grep -q 1 /sys/class/power_supply/battery/charging_mode_booting ; then
	# low power mode
	cp lpm.rc init.rc
	rm init.venturi.rc
fi

umount /sys
umount /proc
date >> /boot.txt

mount -t vfat /dev/block/mmcblk0p17 /emmc
cp /boot.txt /emmc/boot.txt
umount /emmc
rm -rf /emmc

rm -rf /dev/* /stage1

export PATH="${_PATH}"

exec /init
